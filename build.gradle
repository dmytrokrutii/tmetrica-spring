plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.1.4"
}

group = 'com.finalproject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
apply plugin: 'org.flywaydb.flyway'

flyway {
	if(!project.hasProperty('env')) {ext.env = 'dev'}
	apply from: "env/${env}.gradle"
	driver = flyway.driver
	url = flyway.url
	schemas = flyway.schemas
	user = flyway.user
	password = flyway.password
	sqlMigrationSeparator = "_"
	locations = flyway.locations
	placeholders = ["dir" : "${project.projectDir}".toString()]
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.session:spring-session-core'
	compileOnly 'org.projectlombok:lombok'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testCompile group: 'junit', name: 'junit', version: '4.13'
}

test {
	useJUnitPlatform()
}
